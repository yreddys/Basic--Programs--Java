// Program to find the occurences of element in array

package com.occurance;

public class Occurances {

	public static void main(String[] args) {
		int a[] = { 1, 1, 2, 3, 4, 5, 6, 7, 1, 2, 4 };

		for (int i = 0; i < a.length; i++) {
			int count = 0;
			boolean counted = false; // Flag to indicate if the current element has been counted

			// Check if the current element has been counted before
			for (int k = 0; k < i; k++) {
				if (a[i] == a[k]) {
					counted = true;
					break;
				}
			}

			// Count occurrences only if the current element hasn't been counted before
			if (!counted) {
				for (int j = 0; j < a.length; j++) {
					if (a[i] == a[j]) {
						count++;
					}
				}
				System.out.println(a[i] + " =" + count);
			}
		}
	}
}





 //  2. program to find the duplicateElementsOccurances


package com.occurance;

public class findTheDuplicateOccurenaces {
    public static void main(String[] args) {
        int a[] = { 1, 2, 3, 1, 2, 3, 5, 6 ,1};

        for (int i = 0; i < a.length; i++) {
            int count = 0;
            boolean counted = false;

            // Check if the current element has already been counted before
            for (int k = 0; k < i; k++) {
                if (a[i] == a[k]) {
                    counted = true;
                    break;
                }
            }

            // If the current element has not been counted before, count its occurrences
            if (!counted) {
                for (int j = 0; j < a.length; j++) {
                    if (a[i] == a[j]) {
                        count++;
                    }
                }

                // If the count is greater than 1, it's a duplicate
                if (count > 1) {
                    System.out.println(a[i] + " = " + count);
                }
            }
        }
    }
}



// grouping the Employee


package com.employee;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Highest {
	public static void main(String[] args) {
		List<Employee> employee = new ArrayList<>();
		employee.add(new Employee(1, "Reddy", 12, "MPL"));
		employee.add(new Employee(2, "Reddysekhar", 13, "MPL"));
		employee.add(new Employee(3, "yarraneella", 14, "CTY"));
		employee.add(new Employee(4, "H", 13, "CTY"));
		employee.add(new Employee(5, "Hello", 12, "AP"));

		Map<String, List<Employee>> GroupingAddress = employee.stream().collect(Collectors.groupingBy(Employee::getAddress));
		GroupingAddress.forEach((address, employees) -> {
            System.out.println("Address: " + address + ", Employee Count: " + employees.size());
            employees.forEach(System.out::println);
        });
	}
}



 //  second Highest salary

package com.employee;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class secondHighestSal {
	public static void main(String[] args) {
		List<Integer> emp = Arrays.asList(10, 20, 30, 40, 50);
	Optional<Integer> secondHighest = emp.stream().distinct().sorted((e1, e2) -> e2.compareTo(e1)).skip(1)
				.findFirst();

		System.out.println(secondHighest);

	}
}


package com.occurance;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Occurance {
	public static void main(String[] args) {
		List<String> list = Arrays.asList("Hello reddy sekhar hello reddy sekhar");
		Map<String, Long> occurrence = list.stream().flatMap(str -> Arrays.stream(str.split(" ")))
				.collect(Collectors.groupingBy(String::toLowerCase, Collectors.counting()));
		occurrence.forEach((word, count) -> System.out.println(word + " = " + count));
	}
}


O/p:

reddy = 2
hello = 2
sekhar = 2



package com.occurance;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class OccuranceUsingMap {
	public static void main(String[] args) {
		List<String> list = Arrays.asList("Hello reddy hello reddy".split(" "));
		Map<Object, Long> occurances = list.stream()
				.collect(Collectors.groupingBy(String::toLowerCase, Collectors.counting()));

		occurances.forEach((word, count) -> System.out.println(word + "=" + count));
	}
}





O/p:

reddy = 2
hello = 2
sekhar = 2



package com.occurance;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class OccuranceUsingMap {
	public static void main(String[] args) {
		String input = "Hellohello";
		HashMap<Character, Integer> occurrence = new HashMap<>();

		for (char c : input.toCharArray()) {
			occurrence.put(c, occurrence.getOrDefault(c, 0) + 1);
		}

		occurrence.forEach((character, count) -> System.out.println(character + " = " + count));
	}
}


o/p:

e = 2
H = 1
h = 1
l = 4
o = 2



package com.occurance;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class OccurrenceUsingMap {
    public static void main(String[] args) {
        List<String> str = Arrays.asList("Hello hello redy redy".split(" "));
        HashMap<String, Integer> occurrence = new HashMap<>();

        for (String c : str) {
            occurrence.put(c, occurrence.getOrDefault(c, 0) + 1);
        }

        occurrence.forEach((character, count) -> System.out.println(character + " = " + count));
    }
}



o/p:


Hello = 1
hello = 1
redy = 2


Sorting based on length
-----------------------


package com.practice;

public class sortingBasedOnlength {
	public static void main(String[] args) {
		String str[] = { "Hello", "reddy", "am" };
		String temp;
		for (int i = 0; i < str.length; i++) {

			for (int j = i + 1; j < str.length; j++) {
				if (str[i].length() > str[j].length()) {
					temp = str[i];
					str[i] = str[j];
					str[j] = temp;
				}
			}
		}
		for (String s : str) {
			System.out.println(s);
		}
	}
}


