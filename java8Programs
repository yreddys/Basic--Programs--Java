// 1. String Palindrome using java 8

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Java8 {
    public static void main(String[] args) {
        List<String> words = Arrays.asList("radar", "hello", "deified");
        
        Map<Boolean, List<String>> palindromeMap = words.stream()
                .collect(Collectors.partitioningBy(
                        s -> s.equals(new StringBuilder(s).reverse().toString())));
        
        List<String> palindromes = palindromeMap.get(true);
        List<String> nonPalindromes = palindromeMap.get(false);
        
        System.out.println("Palindromes: " + palindromes);
        System.out.println("Non-Palindromes: " + nonPalindromes);
    }
}

 // 2. String Palindrome using java 8 with out predefined methods

import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        String str = "abc";
        boolean isPalindrome = IntStream.range(0, str.length() / 2)
                .allMatch(i -> str.charAt(i) == str.charAt(str.length() - i - 1));
        System.out.println("Is palindrome: " + isPalindrome);
    }
}



// palindrome of number using java 8



import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        int numberPalindrome = 123;
        String str = String.valueOf(numberPalindrome);
        boolean isPalindrome = IntStream.range(0, str.length() / 2)
                .allMatch(i -> str.charAt(i) == str.charAt(str.length() - i - 1));
        System.out.println("Is palindrome: " + isPalindrome);
    }
}


// To convert odd numbers to even using Java 8

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {
        List<Integer> list = Arrays.asList(1, 2, 3, 4, 5, 6);

        List<Integer> updatedList = list.stream()
                                        .map(n -> (n % 2 != 0) ? n + 1 : n)  // Increment odd numbers by 1
                                        .collect(Collectors.toList());

        System.out.println(updatedList);  // Output: [2, 2, 4, 4, 6, 6]
    }
}





