package june15;

import java.util.Comparator;

public class StudentNameComparator implements Comparator<Student> {
    @Override
    public int compare(Student s1, Student s2) {
        return s1.name.compareTo(s2.name);
    }
}



package june15;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ListExample {
    public static void main(String[] args) {
        List<Student> li = new ArrayList<>();
        li.add(new Student(90, "Reddy"));
        li.add(new Student(10, "Reddy"));
        li.add(new Student(20, "Hi"));

        // Sort the list by age using the comparator
        Collections.sort(li, new StudentAgeComparator());

        System.out.println("Sorted by age:");
        for (Student student : li) {
            System.out.println(student);
        }

        // Sort the list by name using the comparator
        Collections.sort(li, new StudentNameComparator());

        System.out.println("Sorted by name:");
        for (Student student : li) {
            System.out.println(student);
        }
    }
}

Comparable
==========

package ju15;

public class students implements Comparable<students> {
	int id;
	String name;
	int age;

	public students(int id, String name, int age) {
		this.id = id;
		this.name = name;
		this.age = age;
	}

	@Override
	public int compareTo(students o) {
		if (age == o.age)
			return 0;
		else if (age > o.age) {
			return 1;
		} else
			return -1;
	}

	public students() {
	}
}


package ju15;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Client {
	public static void main(String[] args) {
		List<students> list = new ArrayList<>();
		list.add(new students(1, "reddy", 20));
		list.add(new students(2, "reddy", 20));
		list.add(new students(3, "reddy", 20));
//		Collections.sort(list, new students());
		Collections.sort(list, new students());
	}
}



